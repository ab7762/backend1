{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    // injektoidaan router ja authService\n    constructor(router, authService) {\n      this.router = router;\n      this.authService = authService;\n      this.error = '';\n    }\n\n    ngOnInit() {\n      // aina kun login-komponentti ladataan, poistetaan token\n      this.authService.logout();\n    } // lomakkeen lähetys\n    // authService palauttaa observablen jossa on joko true tai false\n\n\n    onSubmit(formData) {\n      this.authService.login(formData.tunnus, formData.salasana).subscribe(result => {\n        if (result === true) {\n          this.router.navigate(['/admin']);\n        } else {\n          this.error = 'Tunnus tai salasana väärä';\n        }\n      });\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"container-fluid\"], [1, \"d-flex\", \"mt-3\", \"mb-3\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"tunnus\"], [\"type\", \"text\", \"name\", \"tunnus\", \"ngModel\", \"\", 1, \"form-control\"], [\"for\", \"salasana\"], [\"type\", \"password\", \"name\", \"salasana\", \"ngModel\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-light\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtext(2, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(4);\n\n          return ctx.onSubmit(_r0.value);\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Tunnus:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Salasana:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 8)(12, \"br\");\n        i0.ɵɵelementStart(13, \"button\", 9);\n        i0.ɵɵtext(14, \"L\\u00E4het\\u00E4\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(15, LoginComponent_div_15_Template, 2, 1, \"div\", 10);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgIf],\n    encapsulation: 2\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}